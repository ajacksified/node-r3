require! b

r3 = require '../build/Release/r3.node'


route-data = 999;

(n = new r3.Tree 1)
  ..insert "/foo/bar/baz"
  ..insert "/foo/bar/qux"
  ..insert "/foo/bar/quux"
  ..insert "/foo/bar/corge"
  ..insert "/foo/bar/grault"
  ..insert "/foo/bar/garply"
  ..insert "/foo/baz/bar"
  ..insert "/foo/baz/qux"
  ..insert "/foo/baz/quux"
  ..insert "/foo/baz/corge"
  ..insert "/foo/baz/grault"
  ..insert "/foo/baz/garply"
  ..insert "/foo/qux/bar"
  ..insert "/foo/qux/baz"
  ..insert "/foo/qux/quux"
  ..insert "/foo/qux/corge"
  ..insert "/foo/qux/grault"
  ..insert "/foo/qux/garply"
  ..insert "/foo/quux/bar"
  ..insert "/foo/quux/baz"
  ..insert "/foo/quux/qux"
  ..insert "/foo/quux/corge"
  ..insert "/foo/quux/grault"
  ..insert "/foo/quux/garply"
  ..insert "/foo/corge/bar"
  ..insert "/foo/corge/baz"
  ..insert "/foo/corge/qux"
  ..insert "/foo/corge/quux"
  ..insert "/foo/corge/grault"
  ..insert "/foo/corge/garply"
  ..insert "/foo/grault/bar"
  ..insert "/foo/grault/baz"
  ..insert "/foo/grault/qux"
  ..insert "/foo/grault/quux"
  ..insert "/foo/grault/corge"
  ..insert "/foo/grault/garply"
  ..insert "/foo/garply/bar"
  ..insert "/foo/garply/baz"
  ..insert "/foo/garply/qux"
  ..insert "/foo/garply/quux"
  ..insert "/foo/garply/corge"
  ..insert "/foo/garply/grault"
  ..insert "/bar/foo/baz"
  ..insert "/bar/foo/qux"
  ..insert "/bar/foo/quux"
  ..insert "/bar/foo/corge"
  ..insert "/bar/foo/grault"
  ..insert "/bar/foo/garply"
  ..insert "/bar/baz/foo"
  ..insert "/bar/baz/qux"
  ..insert "/bar/baz/quux"
  ..insert "/bar/baz/corge"
  ..insert "/bar/baz/grault"
  ..insert "/bar/baz/garply"
  ..insert "/bar/qux/foo"
  ..insert "/bar/qux/baz"
  ..insert "/bar/qux/quux"
  ..insert "/bar/qux/corge"
  ..insert "/bar/qux/grault"
  ..insert "/bar/qux/garply"
  ..insert "/bar/quux/foo"
  ..insert "/bar/quux/baz"
  ..insert "/bar/quux/qux"
  ..insert "/bar/quux/corge"
  ..insert "/bar/quux/grault"
  ..insert "/bar/quux/garply"
  ..insert "/bar/corge/foo"
  ..insert "/bar/corge/baz"
  ..insert "/bar/corge/qux"
  ..insert "/bar/corge/quux"
  ..insert "/bar/corge/grault"
  ..insert "/bar/corge/garply"
  ..insert "/bar/grault/foo"
  ..insert "/bar/grault/baz"
  ..insert "/bar/grault/qux"
  ..insert "/bar/grault/quux"
  ..insert "/bar/grault/corge"
  ..insert "/bar/grault/garply"
  ..insert "/bar/garply/foo"
  ..insert "/bar/garply/baz"
  ..insert "/bar/garply/qux"
  ..insert "/bar/garply/quux"
  ..insert "/bar/garply/corge"
  ..insert "/bar/garply/grault"
  ..insert "/baz/foo/bar"
  ..insert "/baz/foo/qux"
  ..insert "/baz/foo/quux"
  ..insert "/baz/foo/corge"
  ..insert "/baz/foo/grault"
  ..insert "/baz/foo/garply"
  ..insert "/baz/bar/foo"
  ..insert "/baz/bar/qux"
  ..insert "/baz/bar/quux"
  ..insert "/baz/bar/corge"
  ..insert "/baz/bar/grault"
  ..insert "/baz/bar/garply"
  ..insert "/baz/qux/foo"
  ..insert "/baz/qux/bar"
  ..insert "/baz/qux/quux"
  ..insert "/baz/qux/corge"
  ..insert "/baz/qux/grault"
  ..insert "/baz/qux/garply"
  ..insert "/baz/quux/foo"
  ..insert "/baz/quux/bar"
  ..insert "/baz/quux/qux"
  ..insert "/baz/quux/corge"
  ..insert "/baz/quux/grault"
  ..insert "/baz/quux/garply"
  ..insert "/baz/corge/foo"
  ..insert "/baz/corge/bar"
  ..insert "/baz/corge/qux"
  ..insert "/baz/corge/quux"
  ..insert "/baz/corge/grault"
  ..insert "/baz/corge/garply"
  ..insert "/baz/grault/foo"
  ..insert "/baz/grault/bar"
  ..insert "/baz/grault/qux"
  ..insert "/baz/grault/quux"
  ..insert "/baz/grault/corge"
  ..insert "/baz/grault/garply"
  ..insert "/baz/garply/foo"
  ..insert "/baz/garply/bar"
  ..insert "/baz/garply/qux"
  ..insert "/baz/garply/quux"
  ..insert "/baz/garply/corge"
  ..insert "/baz/garply/grault"
  ..insert "/qux/foo/bar"
  ..insert "/qux/foo/baz"
  ..insert "/qux/foo/quux"
  ..insert "/qux/foo/corge"
  ..insert "/qux/foo/grault"
  ..insert "/qux/foo/garply"
  ..insert "/qux/bar/foo"
  ..insert "/qux/bar/baz"
  ..insert "/qux/bar/quux"
  ..insert "/qux/bar/corge" route-data
  ..insert "/qux/bar/grault"
  ..insert "/qux/bar/garply"
  ..insert "/qux/baz/foo"
  ..insert "/qux/baz/bar"
  ..insert "/qux/baz/quux"
  ..insert "/qux/baz/corge"
  ..insert "/qux/baz/grault"
  ..insert "/qux/baz/garply"
  ..insert "/qux/quux/foo"
  ..insert "/qux/quux/bar"
  ..insert "/qux/quux/baz"
  ..insert "/qux/quux/corge"
  ..insert "/qux/quux/grault"
  ..insert "/qux/quux/garply"
  ..insert "/qux/corge/foo"
  ..insert "/qux/corge/bar"
  ..insert "/qux/corge/baz"
  ..insert "/qux/corge/quux"
  ..insert "/qux/corge/grault"
  ..insert "/qux/corge/garply"
  ..insert "/qux/grault/foo"
  ..insert "/qux/grault/bar"
  ..insert "/qux/grault/baz"
  ..insert "/qux/grault/quux"
  ..insert "/qux/grault/corge"
  ..insert "/qux/grault/garply"
  ..insert "/qux/garply/foo"
  ..insert "/qux/garply/bar"
  ..insert "/qux/garply/baz"
  ..insert "/qux/garply/quux"
  ..insert "/qux/garply/corge"
  ..insert "/qux/garply/grault"
  ..insert "/quux/foo/bar"
  ..insert "/quux/foo/baz"
  ..insert "/quux/foo/qux"
  ..insert "/quux/foo/corge"
  ..insert "/quux/foo/grault"
  ..insert "/quux/foo/garply"
  ..insert "/quux/bar/foo"
  ..insert "/quux/bar/baz"
  ..insert "/quux/bar/qux"
  ..insert "/quux/bar/corge"
  ..insert "/quux/bar/grault"
  ..insert "/quux/bar/garply"
  ..insert "/quux/baz/foo"
  ..insert "/quux/baz/bar"
  ..insert "/quux/baz/qux"
  ..insert "/quux/baz/corge"
  ..insert "/quux/baz/grault"
  ..insert "/quux/baz/garply"
  ..insert "/quux/qux/foo"
  ..insert "/quux/qux/bar"
  ..insert "/quux/qux/baz"
  ..insert "/quux/qux/corge"
  ..insert "/quux/qux/grault"
  ..insert "/quux/qux/garply"
  ..insert "/quux/corge/foo"
  ..insert "/quux/corge/bar"
  ..insert "/quux/corge/baz"
  ..insert "/quux/corge/qux"
  ..insert "/quux/corge/grault"
  ..insert "/quux/corge/garply"
  ..insert "/quux/grault/foo"
  ..insert "/quux/grault/bar"
  ..insert "/quux/grault/baz"
  ..insert "/quux/grault/qux"
  ..insert "/quux/grault/corge"
  ..insert "/quux/grault/garply"
  ..insert "/quux/garply/foo"
  ..insert "/quux/garply/bar"
  ..insert "/quux/garply/baz"
  ..insert "/quux/garply/qux"
  ..insert "/quux/garply/corge"
  ..insert "/quux/garply/grault"
  ..insert "/corge/foo/bar"
  ..insert "/corge/foo/baz"
  ..insert "/corge/foo/qux"
  ..insert "/corge/foo/quux"
  ..insert "/corge/foo/grault"
  ..insert "/corge/foo/garply"
  ..insert "/corge/bar/foo"
  ..insert "/corge/bar/baz"
  ..insert "/corge/bar/qux"
  ..insert "/corge/bar/quux"
  ..insert "/corge/bar/grault"
  ..insert "/corge/bar/garply"
  ..insert "/corge/baz/foo"
  ..insert "/corge/baz/bar"
  ..insert "/corge/baz/qux"
  ..insert "/corge/baz/quux"
  ..insert "/corge/baz/grault"
  ..insert "/corge/baz/garply"
  ..insert "/corge/qux/foo"
  ..insert "/corge/qux/bar"
  ..insert "/corge/qux/baz"
  ..insert "/corge/qux/quux"
  ..insert "/corge/qux/grault"
  ..insert "/corge/qux/garply"
  ..insert "/corge/quux/foo"
  ..insert "/corge/quux/bar"
  ..insert "/corge/quux/baz"
  ..insert "/corge/quux/qux"
  ..insert "/corge/quux/grault"
  ..insert "/corge/quux/garply"
  ..insert "/corge/grault/foo"
  ..insert "/corge/grault/bar"
  ..insert "/corge/grault/baz"
  ..insert "/corge/grault/qux"
  ..insert "/corge/grault/quux"
  ..insert "/corge/grault/garply"
  ..insert "/corge/garply/foo"
  ..insert "/corge/garply/bar"
  ..insert "/corge/garply/baz"
  ..insert "/corge/garply/qux"
  ..insert "/corge/garply/quux"
  ..insert "/corge/garply/grault"
  ..insert "/grault/foo/bar"
  ..insert "/grault/foo/baz"
  ..insert "/grault/foo/qux"
  ..insert "/grault/foo/quux"
  ..insert "/grault/foo/corge"
  ..insert "/grault/foo/garply"
  ..insert "/grault/bar/foo"
  ..insert "/grault/bar/baz"
  ..insert "/grault/bar/qux"
  ..insert "/grault/bar/quux"
  ..insert "/grault/bar/corge"
  ..insert "/grault/bar/garply"
  ..insert "/grault/baz/foo"
  ..insert "/grault/baz/bar"
  ..insert "/grault/baz/qux"
  ..insert "/grault/baz/quux"
  ..insert "/grault/baz/corge"
  ..insert "/grault/baz/garply"
  ..insert "/grault/qux/foo"
  ..insert "/grault/qux/bar"
  ..insert "/grault/qux/baz"
  ..insert "/grault/qux/quux"
  ..insert "/grault/qux/corge"
  ..insert "/grault/qux/garply"
  ..insert "/grault/quux/foo"
  ..insert "/grault/quux/bar"
  ..insert "/grault/quux/baz"
  ..insert "/grault/quux/qux"
  ..insert "/grault/quux/corge"
  ..insert "/grault/quux/garply"
  ..insert "/grault/corge/foo"
  ..insert "/grault/corge/bar"
  ..insert "/grault/corge/baz"
  ..insert "/grault/corge/qux"
  ..insert "/grault/corge/quux"
  ..insert "/grault/corge/garply"
  ..insert "/grault/garply/foo"
  ..insert "/grault/garply/bar"
  ..insert "/grault/garply/baz"
  ..insert "/grault/garply/qux"
  ..insert "/grault/garply/quux"
  ..insert "/grault/garply/corge"
  ..insert "/garply/foo/bar"
  ..insert "/garply/foo/baz"
  ..insert "/garply/foo/qux"
  ..insert "/garply/foo/quux"
  ..insert "/garply/foo/corge"
  ..insert "/garply/foo/grault"
  ..insert "/garply/bar/foo"
  ..insert "/garply/bar/baz"
  ..insert "/garply/bar/qux"
  ..insert "/garply/bar/quux"
  ..insert "/garply/bar/corge"
  ..insert "/garply/bar/grault"
  ..insert "/garply/baz/foo"
  ..insert "/garply/baz/bar"
  ..insert "/garply/baz/qux"
  ..insert "/garply/baz/quux"
  ..insert "/garply/baz/corge"
  ..insert "/garply/baz/grault"
  ..insert "/garply/qux/foo"
  ..insert "/garply/qux/bar"
  ..insert "/garply/qux/baz"
  ..insert "/garply/qux/quux"
  ..insert "/garply/qux/corge"
  ..insert "/garply/qux/grault"
  ..insert "/garply/quux/foo"
  ..insert "/garply/quux/bar"
  ..insert "/garply/quux/baz"
  ..insert "/garply/quux/qux"
  ..insert "/garply/quux/corge"
  ..insert "/garply/quux/grault"
  ..insert "/garply/corge/foo"
  ..insert "/garply/corge/bar"
  ..insert "/garply/corge/baz"
  ..insert "/garply/corge/qux"
  ..insert "/garply/corge/quux"
  ..insert "/garply/corge/grault"
  ..insert "/garply/grault/foo"
  ..insert "/garply/grault/bar"
  ..insert "/garply/grault/baz"
  ..insert "/garply/grault/qux"
  ..insert "/garply/grault/quux"
  ..insert "/garply/grault/corge"

e = new r3.MatchEntry "/qux/bar/corge"

(tree2 = new r3.Tree 1)
  ..insert "/post/{year}/{month}"
  ..compile!

r =
  report: (name, result, iterations) ->
    sec = result / 1000000000
    console.log "#name: #iterations iterations, finished in #sec seconds"
    console.log "#{iterations / sec} i\/sec\n"

count = 500000
b \tree-compile
  .reporter r
  .run count, !-> n.compile!
b \string-dispatch
  .reporter r
  .run count, !-> n.match "/qux/bar/corge"
b \string-match-entry
  .reporter r
  .run count, !-> m = n.match e
b \PCRE-dispatch
  .reporter r
  .run count, !-> tree2.match "/post/2014/12"
